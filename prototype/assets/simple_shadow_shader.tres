[gd_resource type="VisualShader" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_disabled;




void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(1.000000, 1.000000, 1.000000);
	float n_out2p1 = 1.000000;

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out2p0;
	COLOR.a = n_out3p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -666.4, 329.6 )
mode = 1
modes/blend = 5
flags/light_only = false
nodes/fragment/0/position = Vector2( 720, 780 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 260, 540 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 220, 880 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 1, 0, 1 )
